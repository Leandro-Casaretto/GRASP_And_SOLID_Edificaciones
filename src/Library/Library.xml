<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="M:Full_GRASP_And_SOLID.Library.Building.getTasks">
            <summary>
            Devolvemos las tasks
            </summary>
        </member>
        <member name="M:Full_GRASP_And_SOLID.Library.Building.GetProductionCost">
            <summary>
            Creamos método GetProductionCost
            Al ser Building la clase experta en información, le asignamos la responsabilidad de
            calcular el costo (Patrón Expert)
            </summary>
        </member>
        <member name="T:Full_GRASP_And_SOLID.Library.ConsolePrinter">
            <summary>
            Independizamos el poder imprimir en consola, creando la clase ConsolePrinter, 
            que hereda de la interfaz IPrinter. 
            (Patrón utilizado: Polimorfismo)
            </summary>
        </member>
        <member name="T:Full_GRASP_And_SOLID.Library.Empty">
            <summary>
            Creamos la excepción que intervendrá cuando no se encuentren tasks.
            </summary>
        </member>
        <member name="T:Full_GRASP_And_SOLID.Library.FilePrinter">
            <summary>
            Independizamos el poder imprimir en archivos, creando la clase FilePrinter, que hereda de la interfaz
            IPrinter. (Patrón utilizado: Polimorfismo)
            </summary>
        </member>
        <member name="T:Full_GRASP_And_SOLID.Library.IPrinter">
            <summary>
            Al crear la interfaz IPrinter, lo que logramos es independizarnos de cualquier implementación.
            De esta manera, cramos clases que implementen la interfaz cada vez que querramos tener una nueva forma
            de impresión. (Patrón utilizado: Polimorfismo)
            </summary>
        </member>
        <member name="T:Full_GRASP_And_SOLID.Library.Printer">
            <summary>
            La siguiente clase es la encargada de imprimir en consola. Al crear esta clase, le quitamos la
            responsabilidad a Building de hacerlo, lo cual evita tener que cambiar esa clase cada vez
            que querramos hacer un cambio en la manera de imprimir. (Principio utilizado: SRP)
            </summary>
        </member>
    </members>
</doc>
